/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.97.2
*/

import {
  BigNumberish,
  BN,
  Bytes,
  decompressBytecode,
  InputValue,
  Predicate,
  PredicateParams,
  Provider,
} from 'fuels';

export type VerifierConfigurables = undefined;

export type VerifierInputs = [answer: Bytes];

export type VerifierParameters = Omit<
  PredicateParams<VerifierInputs, VerifierConfigurables>,
  'abi' | 'bytecode'
>;

const abi = {
  "programType": "predicate",
  "specVersion": "1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "bool",
      "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
    },
    {
      "type": "struct std::bytes::Bytes",
      "concreteTypeId": "cdd87b7d12fe505416570c294c884bca819364863efe3bf539245fa18515fbbb",
      "metadataTypeId": 1
    }
  ],
  "metadataTypes": [
    {
      "type": "raw untyped ptr",
      "metadataTypeId": 0
    },
    {
      "type": "struct std::bytes::Bytes",
      "metadataTypeId": 1,
      "components": [
        {
          "name": "buf",
          "typeId": 2
        },
        {
          "name": "len",
          "typeId": 3
        }
      ]
    },
    {
      "type": "struct std::bytes::RawBytes",
      "metadataTypeId": 2,
      "components": [
        {
          "name": "ptr",
          "typeId": 0
        },
        {
          "name": "cap",
          "typeId": 3
        }
      ]
    },
    {
      "type": "u64",
      "metadataTypeId": 3
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "answer",
          "concreteTypeId": "cdd87b7d12fe505416570c294c884bca819364863efe3bf539245fa18515fbbb"
        }
      ],
      "name": "main",
      "output": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903",
      "attributes": null
    }
  ],
  "loggedTypes": [],
  "messagesTypes": [],
  "configurables": []
};

const bytecode = decompressBytecode('H4sIAAAAAAAAA31WTWwbVRAeO65iS63yaJwqPF8WFNCChGQJSBz/xG9ZW24bUJ5pChzqptx6QsGiEUcfgQMKlYAefUKI0zoKEsdckDihHJG4mEMlIsUih1ZK1EP45u3beOsma8l6s7Mz3zcz783sk0dF+oIoQ+aXK9q11DndS4nTU5KHmr6jtPu5oqmNEa10VoOVT71XSbeC/t0mkfaD/h2PaBb/LUWz0XO3QelZL6OgSy0CET434e9pfycL36+61ynrNjM92A+N7OV7ejX4F35Z90ZGIaYcfC7Dp679wTF8nDMftlNsl2f+I+PjLSjdGrhj3MH+GS7kTisod5qCNkaiwTK/K1zP90Qz34OuDF0DaxUYQ+RY1WuB6mr4f3CJtFfMGtmbI/AKd/QOeHcEeIXr76qOH5QLDWAhX8RbBl8xeqdvDZSR2xmFWH82stdQ8oDIOX6bPnk2TOtnwwzyvS39fcRHFeBVXldEUm3yM+NX5sL6pmDHNd6OcFAXgVyEzVkbmXNuBV9Gevi/ifwU8qoUbjiI0alBroU+O9jLwV+o6f3u+6b2e9pzskb28nvAvBdycX2D30LMRk8eiMn4X5OtfQKOhq9gHNTzMvw34T9v94f3fd7G2jdyGCvvm9UHx2P9gHOL7Jk71EOGzx/Ru3NikVzLBdTwe6KZH7JQmHNMSvp9kq0hx+lEcYZ7usBnqWjy83f5jInoPeo3LZ8SPWT/E0GPgPcjcG8eG/z6GD+dlWvAXx1SxyumeY+B3ZaPJ/c69QbHt6VSr2wc0jLwl1Gj3LWwX9LyiUBPpgp4V9s4FFWsJaxLWBXWOtYyn7mYz3t4rlm+t87huxLyUQ52Vbbr+Ed0jt1UzK50MR6dxOyWLsaj/2J25sxfgPc4ZldPwPvb2mW4ZsJDPUa0/IBoTT4hnmN/RrUsoC7c57YnuadMvawevka/aO2nruIZayF6j36fermJfsdawMr2Zm7g+Wqoz03q2d7irvB+QF9B/5e66zin7XeV/ji4Jw8U8hIk/9GTuf3O/QMcnMU5nq97Rm79Suec75/Y1nLVeE8tl45xbSZw/WJ69RbO+DrPpjnu7X0jN5vYpxf4vmF7rg34qnw2wLcIvvsxPvThhXzfWj4nxjdM4Pssll+Jz5jl68X4thP4upavOOYbZBP4Pozlt8RnFXwr4HsU4+sn8H1k+VSMbz6BbzGWH8/3esiHb9mYL0jgK1s+3u+Iz03gk7H86twLtnfKDyj1EvfOQ55dJ0402+p2tk1Hsy2cm9tmtvF3nb/3PBNjPtOTPpi3Ipq3Zq6O8C0K7wpn9wLM3Bm+L9j5KmLzNcKLzVdyx3H0SK5hzrYpfe12Q22tU2o2XK8wh61tBvgCMzON+mbu4Puv2zRzty34fsKzXcmnjrn/YKaG3/bVXcTicCyuPCk+V49WeDkiuvR1739qrTuoOAkAAA==');

export class Verifier extends Predicate<
  VerifierInputs,
  VerifierConfigurables
> {
  static readonly abi = abi;
  static readonly bytecode = bytecode;

  constructor(params: VerifierParameters) {
    super({ abi, bytecode, ...params });
  }
}
